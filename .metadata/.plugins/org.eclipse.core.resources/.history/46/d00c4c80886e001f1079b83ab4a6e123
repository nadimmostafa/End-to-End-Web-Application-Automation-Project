package com.tutorialsninja.qa.testscripts;

import java.util.Properties;

import org.openqa.selenium.By;
import org.testng.Assert;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import com.tutorialsninja.qa.base.Base;
import com.tutorialsninja.qa.utils.ReadTestDataFromProperties;

public class TC003_SearchProduct extends Base {
	ReadTestDataFromProperties read = new ReadTestDataFromProperties(new Properties());
	@BeforeMethod
	public void setUp() {
		launchBrowser();
	}
	@Test(priority=1, description="Searching product with valid Key Name")
	public void varifySearchwithValidProductName() {
		driver.findElement(By.name("search")).sendKeys("HP");
		driver.findElement(By.xpath("//span[@class='input-group-btn']/button")).click();
		boolean isDispaled = driver.findElement(By.linkText("HP LP3065")).isDisplayed();
		Assert.assertTrue(isDispaled);
		
	}
	
	@Test(priority=2, description="Searching product with invalid Key Name")
	public void varifySearchwithInvalidProductName() {
		driver.findElement(By.name("search")).sendKeys("Honda");
		driver.findElement(By.xpath("//span[@class='input-group-btn']/button")).click();
		String actualText = driver.findElement(By.xpath("//p[contains(text(),'There is no product')]")).getText();
		String exceptedText = "Products meeting the search criteria";
		Assert.assertNotSame(actualText, exceptedText);
	}
	@AfterMethod
	public void tearDown() {
		driver.close();
	}
}
